{"ast":null,"code":"var _jsxFileName = \"/Users/shannansorenson/Desktop/dictionary-project/src/Results.js\";\nimport React from \"react\";\nimport Phonetic from \"./Phonetic\";\nimport Meaning from \"./Meaning\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Results(props) {\n  if (props.results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.results.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), props.results.phonetics.map(function (phonetic, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Phonetic, {\n            phonetic: phonetic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this);\n      }), props.results.meanings.map(function (meaning, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Meaning, {\n            meaning: meaning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/shannansorenson/Desktop/dictionary-project/src/Results.js"],"names":["React","Phonetic","Meaning","Results","props","results","word","phonetics","map","phonetic","index","meanings","meaning"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,MAAIA,KAAK,CAACC,OAAV,EAAmB;AACjB,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA,kBAAKD,KAAK,CAACC,OAAN,CAAcC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,KAAK,CAACC,OAAN,CAAcE,SAAd,CAAwBC,GAAxB,CAA4B,UAAUC,QAAV,EAAoBC,KAApB,EAA2B;AACtD,4BACE;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA;AADF,WAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA,CAFH,EASGN,KAAK,CAACC,OAAN,CAAcM,QAAd,CAAuBH,GAAvB,CAA2B,UAAUI,OAAV,EAAmBF,KAAnB,EAA0B;AACpD,4BACE;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,OAAO,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,WAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD,GApBD,MAoBO;AACL,WAAO,IAAP;AACD;AACF;KAxBuBP,O","sourcesContent":["import React from \"react\";\nimport Phonetic from \"./Phonetic\";\nimport Meaning from \"./Meaning\";\n\nexport default function Results(props) {\n  if (props.results) {\n    return (\n      <div className=\"Results\">\n        <h2>{props.results.word}</h2>\n        {props.results.phonetics.map(function (phonetic, index) {\n          return (\n            <div key={index}>\n              <Phonetic phonetic={phonetic} />\n            </div>\n          );\n        })}\n        {props.results.meanings.map(function (meaning, index) {\n          return (\n            <div key={index}>\n              <Meaning meaning={meaning} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}